import { BaseChart } from "./basechart.js";
import { ChartLine } from "./chart-line.mjs";
import { HorizontalAxis } from "./horizontal-axis.js";
import { VerticalAxis } from "./vertical-axis.js";
import { Tooltip } from "./tooltip.js";
import { ChartBrush } from "./chart-brush.js";
import { ChartZoomBrush } from "./chart-zoom-brush.js";
type Offsets = {
    top: number;
    bottom: number;
    right: number;
    left: number;
};
export declare class LineChart extends BaseChart {
    private chartLines;
    private _horizontalAxis;
    private _verticalAxis;
    offsets: Offsets;
    private _timeDomain;
    private _verticalDomain;
    private _timeScale;
    private _verticalScale;
    private _timestamps;
    private _tooltip;
    private _brush;
    private _zoomBrush;
    constructor(id: string);
    addChartLine(chartLine: ChartLine): LineChart;
    setTooltip(tooltip: Tooltip): LineChart;
    setBrush(brush: ChartBrush): LineChart;
    setZoom(zoomBrush: ChartZoomBrush): LineChart;
    get tooltip(): Tooltip | undefined;
    set tooltip(value: Tooltip | undefined);
    getChartlines(): ChartLine[];
    get horizontalAxis(): HorizontalAxis;
    set horizontalAxis(value: HorizontalAxis);
    get verticalAxis(): VerticalAxis;
    set verticalAxis(value: VerticalAxis);
    get timeDomain(): number[] | undefined;
    set timeDomain(value: number[] | undefined);
    get verticalDomain(): number[];
    set verticalDomain(value: number[]);
    get timeScale(): any;
    set timeScale(value: any);
    get verticalScale(): any;
    set verticalScale(value: any);
    get timestamps(): number[];
    get brush(): ChartBrush | undefined;
    set brush(value: ChartBrush | undefined);
    get zoomBrush(): ChartZoomBrush | undefined;
    set zoomBrush(value: ChartZoomBrush | undefined);
    draw(): void;
}
export {};
//# sourceMappingURL=linechart.d.mts.map